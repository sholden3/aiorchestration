# AI Orchestration Platform Environment Variables
# Copy this file to .env and fill in your values
# NEVER commit .env to version control

# ============================================
# DATABASE CONFIGURATION
# ============================================
# PostgreSQL connection string (production)
DATABASE_URL=postgresql://user:password@localhost:5432/aiorchestration

# SQLite path (development fallback)
SQLITE_PATH=./data/local.db

# ============================================
# CACHE CONFIGURATION
# ============================================
# Redis URL (optional - falls back to in-memory cache)
REDIS_URL=redis://localhost:6379

# Cache TTL in seconds
CACHE_TTL=300

# ============================================
# MCP GOVERNANCE SERVER
# ============================================
# MCP server port (8001-8100 range)
MCP_PORT=8001

# MCP server host
MCP_HOST=127.0.0.1

# Enable decision caching
MCP_CACHE_ENABLED=true

# Cache TTL for governance decisions (seconds)
MCP_CACHE_TTL=3600

# ============================================
# API SERVER CONFIGURATION
# ============================================
# API bind host
API_HOST=0.0.0.0

# API port
API_PORT=8000

# Number of worker processes
API_WORKERS=4

# ============================================
# SECURITY - CRITICAL
# ============================================
# JWT secret key for token signing (generate with: openssl rand -hex 32)
JWT_SECRET_KEY=your-secret-key-here-must-be-changed-in-production

# API authentication key
API_KEY=your-api-key-here

# Data encryption key (generate with: openssl rand -hex 32)
ENCRYPTION_KEY=your-encryption-key-here

# ============================================
# GOVERNANCE CONFIGURATION
# ============================================
# Governance enforcement level (EXTREME | STRICT | STANDARD | RELAXED)
GOVERNANCE_MODE=EXTREME

# NEVER set this to true - no bypass allowed
GOVERNANCE_BYPASS=false

# Emergency governance skip (use with extreme caution)
# SKIP_GOVERNANCE=

# ============================================
# FRONTEND CONFIGURATION
# ============================================
# Backend API URL
API_BASE_URL=http://localhost:8000

# WebSocket endpoint
WEBSOCKET_URL=ws://localhost:8000/ws

# ============================================
# DEVELOPMENT & DEBUGGING
# ============================================
# Debug mode (NEVER true in production)
DEBUG=false

# Testing mode flag
TESTING=false

# Logging level (DEBUG | INFO | WARNING | ERROR | CRITICAL)
LOG_LEVEL=INFO

# ============================================
# OPTIONAL SERVICES
# ============================================
# GitHub API token (for repository integration)
GITHUB_TOKEN=

# Claude API key (for AI capabilities)
CLAUDE_API_KEY=

# Monitoring service URL
MONITORING_URL=

# Email service configuration
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
SMTP_FROM=noreply@system.local

# ============================================
# DEPLOYMENT CONFIGURATION
# ============================================
# Environment name (development | staging | production)
ENVIRONMENT=development

# Application version
APP_VERSION=3.0.0

# Feature flags
FEATURE_MCP_ENABLED=true
FEATURE_GOVERNANCE_ENABLED=true
FEATURE_DOCUMENTATION_VALIDATION=true

# ============================================
# PERFORMANCE TUNING
# ============================================
# Database connection pool size
DB_POOL_SIZE=100

# Request timeout in seconds
REQUEST_TIMEOUT=30

# WebSocket ping interval (seconds)
WS_PING_INTERVAL=30

# Maximum file upload size (MB)
MAX_UPLOAD_SIZE=10

# ============================================
# NOTES
# ============================================
# 1. Generate secure keys with: openssl rand -hex 32
# 2. Use different keys for each environment
# 3. Rotate keys regularly (monthly recommended)
# 4. Never commit actual values to version control
# 5. Use a secret management service in production
# 6. Monitor for exposed credentials in logs
# 7. Set appropriate file permissions (600)
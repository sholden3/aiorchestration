# Phase Execution Template
# Version: 1.0.0
# Purpose: Standardized template for executing each implementation phase
# Usage: Copy this template for each new phase and follow the checklist

phase_metadata:
  phase_id: "MCP-XXX"
  phase_name: "PHASE_NAME"
  duration: "8 hours"
  risk_level: "LOW|MEDIUM|HIGH"
  dependencies: []
  
# ============================================================================
# PHASE EXECUTION CHECKLIST
# ============================================================================

pre_implementation:
  - task: "Update TRACKER.md"
    description: "Add phase entry to current week section"
    owner: "Alex/Sarah"
    status: "pending"
    
  - task: "Update STATUS.md"
    description: "Update system status and current phase"
    owner: "Alex/Sarah"
    status: "pending"
    
  - task: "Document proposed changes"
    description: "Add to DECISIONS.md with context and rationale"
    owner: "Both"
    status: "pending"
    
  - task: "Review architecture impact"
    description: "Document how changes affect current system"
    owner: "Sarah"
    status: "pending"
    
  - task: "Map application flow"
    description: "Update flow diagrams if needed"
    owner: "Alex"
    status: "pending"

implementation:
  - task: "Core feature implementation"
    description: "[Specific implementation tasks]"
    owner: "[Owner]"
    estimated_time: "2 hours"
    status: "pending"
    
  - task: "Error handling"
    description: "Add comprehensive error handling"
    owner: "[Owner]"
    estimated_time: "30 minutes"
    status: "pending"
    
  - task: "Logging and monitoring"
    description: "Add appropriate logging"
    owner: "[Owner]"
    estimated_time: "30 minutes"
    status: "pending"

testing:
  - task: "Unit tests"
    description: "Write unit tests for new code"
    coverage_target: ">85%"
    owner: "[Owner]"
    status: "pending"
    
  - task: "Integration tests"
    description: "Test integration with existing systems"
    owner: "[Owner]"
    status: "pending"
    
  - task: "Performance tests"
    description: "Verify performance targets met"
    targets:
      - response_time: "<100ms"
      - memory_usage: "<100MB"
    owner: "[Owner]"
    status: "pending"

recursive_testing:
  - task: "Test dependent components"
    description: "Test all components that depend on this code"
    components:
      - component_1
      - component_2
    owner: "[Owner]"
    status: "pending"
    
  - task: "Regression testing"
    description: "Run full regression suite"
    owner: "[Owner]"
    status: "pending"

bug_resolution:
  protocol:
    - step: "Stop current work"
      action: "Pause all implementation"
      
    - step: "Document bug"
      action: "Add to DECISIONS.md with full details"
      template: |
        ## Bug Report - [DATE]
        **Phase**: [PHASE_NAME]
        **Severity**: [HIGH|MEDIUM|LOW]
        **Description**: [What went wrong]
        **Root Cause**: [Why it happened]
        **Fix**: [How it was fixed]
        **Prevention**: [How to prevent recurrence]
        
    - step: "Implement proper fix"
      action: "No shortcuts or workarounds"
      
    - step: "Add regression tests"
      action: "Ensure bug doesn't recur"
      
    - step: "Re-run all tests"
      action: "Verify fix doesn't break anything"

documentation:
  - task: "Update architecture docs"
    files:
      - docs/architecture/README.md
      - docs/architecture/[specific].md
    owner: "[Owner]"
    status: "pending"
    
  - task: "Update API documentation"
    files:
      - docs/api/README.md
    owner: "[Owner]"
    status: "pending"
    
  - task: "Update configuration examples"
    files:
      - examples/
    owner: "[Owner]"
    status: "pending"
    
  - task: "Update README"
    description: "Add new component/feature info"
    owner: "[Owner]"
    status: "pending"

deployment:
  - task: "Run full test suite"
    command: "pytest tests/ -xvs"
    expected_result: "All tests pass"
    status: "pending"
    
  - task: "Lint and format"
    commands:
      - "black ."
      - "flake8 ."
      - "mypy ."
    status: "pending"
    
  - task: "Security scan"
    command: "bandit -r ."
    status: "pending"
    
  - task: "Commit changes"
    commit_template: |
      feat(mcp): [PHASE_NAME] - [Brief description]
      
      - [Key change 1]
      - [Key change 2]
      - [Key change 3]
      
      Phase: MCP-XXX
      Status: Complete
      Tests: All passing
      Docs: Updated
    status: "pending"
    
  - task: "Push to feature branch"
    branch: "feature/mcp-integration"
    status: "pending"
    
  - task: "Update phase status"
    description: "Mark phase complete in CURRENT_PHASE_IMPLEMENTATION.md"
    status: "pending"

phase_transition:
  - task: "Mark current phase complete"
    location: "CURRENT_PHASE_IMPLEMENTATION.md"
    status: "pending"
    
  - task: "Archive phase artifacts"
    destination: "artifacts/[PHASE_ID]/"
    artifacts:
      - test_results
      - performance_metrics
      - decision_logs
    status: "pending"
    
  - task: "Load next phase"
    next_phase: "[NEXT_PHASE_NAME]"
    status: "pending"
    
  - task: "Update all tracking documents"
    documents:
      - TRACKER.md
      - STATUS.md
      - CURRENT_PHASE_IMPLEMENTATION.md
    status: "pending"

# ============================================================================
# SUCCESS CRITERIA
# ============================================================================

success_criteria:
  mandatory:
    - all_tests_passing: true
    - documentation_updated: true
    - code_committed: true
    - no_known_bugs: true
    - performance_targets_met: true
    
  optional:
    - code_review_complete: false
    - security_scan_clean: true
    - load_testing_complete: false

# ============================================================================
# ROLLBACK PLAN
# ============================================================================

rollback:
  trigger_conditions:
    - "Critical bug discovered"
    - "Performance degradation >50%"
    - "Security vulnerability found"
    
  steps:
    - step: "Stop all work"
      action: "Halt phase immediately"
      
    - step: "Revert commits"
      command: "git revert HEAD~n"
      
    - step: "Restore previous state"
      action: "Checkout last known good commit"
      
    - step: "Document failure"
      location: "DECISIONS.md"
      
    - step: "Plan remediation"
      action: "Create new phase plan addressing issues"

# ============================================================================
# METRICS COLLECTION
# ============================================================================

metrics:
  performance:
    - metric: "Implementation time"
      target: "â‰¤8 hours"
      actual: ""
      
    - metric: "Test coverage"
      target: ">85%"
      actual: ""
      
    - metric: "Bug count"
      target: "0"
      actual: ""
      
  quality:
    - metric: "Code review findings"
      target: "<5 minor"
      actual: ""
      
    - metric: "Documentation completeness"
      target: "100%"
      actual: ""

# ============================================================================
# NOTES SECTION
# ============================================================================

notes:
  lessons_learned: |
    [Document any lessons learned during phase execution]
    
  optimization_opportunities: |
    [Note any opportunities for improvement]
    
  follow_up_items: |
    [List any items that need follow-up in future phases]
[pytest]
# Pytest configuration for AI Orchestration System

# Test discovery
testpaths = .
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    e2e: End-to-end tests for complete workflows
    slow: Tests that take more than 5 seconds
    governance: Tests for governance components
    orchestration: Tests for orchestration components
    deployment: Tests for deployment components
    monitoring: Tests for monitoring components
    asyncio: Asynchronous tests using asyncio

# Output options
addopts = 
    -v
    --tb=short
    --strict-markers
    --color=yes
    --asyncio-mode=auto

# Timeout for tests (in seconds)
timeout = 30

# Asyncio configuration
asyncio_mode = auto

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
# Documentation Standards Configuration
# Consolidates validation rules, code formats, and templates
# Authors: Dr. Sarah Chen & Alex Novak
# Version: 1.0
# Last Updated: 2025-09-04

# ============================================================================
# VALIDATION RULES
# ============================================================================

validation_rules:
  markdown:
    required_elements:
      - heading_hierarchy
      - code_block_language
      - link_validity
    
    scoring:
      base_score: 100
      deductions:
        missing_title: 10
        invalid_heading_hierarchy: 5
        missing_code_language: 3
        broken_link: 5
        missing_toc_for_long_doc: 5
    
    thresholds:
      minimum_score: 70
      warning_score: 80
      excellence_score: 95

  code_documentation:
    python:
      required:
        - docstring_present
        - parameter_documentation
        - return_type_hints
      style: google
      min_docstring_length: 10
    
    typescript:
      required:
        - jsdoc_present
        - param_types
        - return_documentation
      style: jsdoc
    
    javascript:
      required:
        - jsdoc_present
        - param_documentation
      style: jsdoc

# ============================================================================
# CODE FORMAT STANDARDS
# ============================================================================

code_formats:
  python:
    docstring_format: |
      """
      Brief description of the function/class.
      
      Longer description if needed.
      
      Args:
          param1 (type): Description of param1.
          param2 (type): Description of param2.
      
      Returns:
          type: Description of return value.
      
      Raises:
          ExceptionType: When this exception is raised.
      
      Example:
          >>> example_usage()
          expected_output
      """
    
    file_header: |
      """
      @fileoverview [Brief description]
      @author [Author name and version]
      @architecture [Layer - Component]
      @business_logic [Business logic summary]
      """

  typescript:
    jsdoc_format: |
      /**
       * Brief description of the function/class.
       * 
       * Longer description if needed.
       * 
       * @param {type} param1 - Description of param1
       * @param {type} param2 - Description of param2
       * @returns {type} Description of return value
       * @throws {Error} When this error is thrown
       * 
       * @example
       * ```typescript
       * exampleUsage();
       * ```
       */
    
    file_header: |
      /**
       * @fileoverview [Brief description]
       * @author [Author name]
       * @module [Module name]
       */

# ============================================================================
# DOCUMENTATION TEMPLATES
# ============================================================================

templates:
  # Main Documentation Templates
  claude_md:
    filename: "CLAUDE.md"
    description: "Main AI assistant instructions and project overview"
    template: |
      # [PROJECT_NAME] Documentation
      
      **Project Name:** [PROJECT_NAME]
      **Version:** [VERSION]
      **Last Updated:** [DATE]
      **Project Status:** [STATUS_INDICATOR] [STATUS_TEXT]
      
      ## Project Overview
      [Brief project description and purpose]
      
      ## Quick Start
      ### Prerequisites
      - [Prerequisite 1]
      - [Prerequisite 2]
      
      ### Installation
      ```bash
      [Installation commands]
      ```
      
      ### First Run
      ```bash
      [First run commands]
      ```
      
      ## Architecture Overview
      [Architecture description]
      
      ### Key Components
      | Component | Technology | Purpose |
      |-----------|------------|---------|
      | [COMPONENT] | [TECH] | [PURPOSE] |
      
      ## Core Features
      ### [Feature Category]
      - [Feature 1]
      - [Feature 2]
      
      ## Project Structure
      ```
      [Directory structure]
      ```
      
      ## Critical Governance Requirements
      ### ⚠️ MANDATORY RULES FOR AI ASSISTANTS
      1. [Rule 1]
      2. [Rule 2]
      
      ### Definition of Done
      - [ ] Code written and documented
      - [ ] Tests written and passing (>85% coverage)
      - [ ] Documentation updated and validated
      - [ ] Governance validation passing (>95% score)

  status_md:
    filename: "STATUS.md"
    description: "System status and health metrics"
    template: |
      # System Status
      
      **Last Updated:** [TIMESTAMP]
      **System Health:** [HEALTH_INDICATOR]
      **Version:** [VERSION]
      
      ## Quick Status
      | Component | Status | Health | Last Check |
      |-----------|--------|--------|------------|
      | [COMPONENT] | [STATUS] | [HEALTH] | [TIME] |
      
      ## Metrics Summary
      - **Uptime:** [UPTIME]
      - **Response Time:** [RESPONSE_TIME]
      - **Error Rate:** [ERROR_RATE]
      - **Active Users:** [USERS]
      
      ## Recent Changes
      - [CHANGE_1]
      - [CHANGE_2]
      
      ## Known Issues
      - [ISSUE_1]
      - [ISSUE_2]
      
      ## Upcoming Maintenance
      - [MAINTENANCE_1]

  tracker_md:
    filename: "TRACKER.md"
    description: "Project phase and progress tracking"
    template: |
      # Project Tracker
      
      **Current Phase:** [PHASE_NUMBER] - [PHASE_NAME]
      **Progress:** [PROGRESS_PERCENTAGE]%
      **Target Completion:** [TARGET_DATE]
      
      ## Phase Overview
      [Phase description]
      
      ## Completed Phases
      - [x] Phase 1: [NAME] - [COMPLETION_DATE]
      - [x] Phase 2: [NAME] - [COMPLETION_DATE]
      
      ## Current Phase Tasks
      - [ ] [TASK_1]
      - [ ] [TASK_2]
      - [x] [COMPLETED_TASK]
      
      ## Upcoming Phases
      - Phase [N]: [NAME] - [TARGET_DATE]
      
      ## Blockers
      - [BLOCKER_1]
      
      ## Dependencies
      - [DEPENDENCY_1]

  decisions_md:
    filename: "DECISIONS.md"
    description: "Architectural and technical decisions log"
    template: |
      # Technical Decisions Log
      
      ## [DATE] - [DECISION_TITLE]
      
      ### Context
      [What situation required a decision]
      
      ### Decision
      [What was decided]
      
      ### Rationale
      [Why this decision was made]
      
      ### Consequences
      - **Positive:** [Positive outcomes]
      - **Negative:** [Trade-offs]
      
      ### Alternatives Considered
      1. [Alternative 1] - [Why not chosen]
      2. [Alternative 2] - [Why not chosen]

  # Architecture Documentation Templates
  architecture:
    api_contracts:
      filename: "api-contracts.md"
      description: "API endpoint specifications"
      template: |
        # API Contracts
        
        ## Endpoint: [ENDPOINT_PATH]
        
        ### Method: [HTTP_METHOD]
        
        ### Description
        [What this endpoint does]
        
        ### Request
        ```json
        {
          "field": "type"
        }
        ```
        
        ### Response
        ```json
        {
          "field": "type"
        }
        ```
        
        ### Error Codes
        | Code | Description |
        |------|-------------|
        | 400 | Bad Request |
        | 401 | Unauthorized |
        | 404 | Not Found |
        | 500 | Internal Server Error |

    backend:
      filename: "backend.md"
      description: "Backend architecture documentation"
      template: |
        # Backend Architecture
        
        ## Technology Stack
        - **Language:** [LANGUAGE]
        - **Framework:** [FRAMEWORK]
        - **Database:** [DATABASE]
        - **Cache:** [CACHE]
        
        ## Architecture Pattern
        [Pattern description]
        
        ## Key Components
        ### [Component Name]
        **Purpose:** [Purpose]
        **Dependencies:** [Dependencies]
        **Interfaces:** [Interfaces]

    database:
      filename: "database.md"
      description: "Database schema and design"
      template: |
        # Database Architecture
        
        ## Database Type
        [Database type and version]
        
        ## Schema Design
        ### Table: [TABLE_NAME]
        | Column | Type | Constraints | Description |
        |--------|------|-------------|-------------|
        | id | UUID | PRIMARY KEY | Unique identifier |
        | [COLUMN] | [TYPE] | [CONSTRAINTS] | [DESCRIPTION] |
        
        ## Indexes
        - [INDEX_1]: [COLUMNS] - [PURPOSE]
        
        ## Relationships
        - [TABLE1] -> [TABLE2]: [RELATIONSHIP_TYPE]

  # Testing Documentation Templates
  testing:
    strategy:
      filename: "testing-strategy.md"
      description: "Overall testing strategy and approach"
      template: |
        # Testing Strategy
        
        ## Testing Pyramid
        - **Unit Tests:** [PERCENTAGE]%
        - **Integration Tests:** [PERCENTAGE]%
        - **E2E Tests:** [PERCENTAGE]%
        
        ## Coverage Requirements
        - **Backend:** [PERCENTAGE]%
        - **Frontend:** [PERCENTAGE]%
        - **Overall:** [PERCENTAGE]%
        
        ## Testing Tools
        - **Unit Testing:** [TOOL]
        - **Integration Testing:** [TOOL]
        - **E2E Testing:** [TOOL]
        
        ## CI/CD Integration
        [How tests are integrated into CI/CD]

# ============================================================================
# METADATA CONFIGURATION
# ============================================================================

metadata:
  required_fields:
    - filename
    - author
    - version
    - last_updated
    - description
  
  optional_fields:
    - tags
    - related_docs
    - review_status
    - approval_date

# ============================================================================
# GOVERNANCE INTEGRATION
# ============================================================================

governance:
  documentation_compliance:
    enforcement_level: strict
    minimum_score: 70
    review_required: true
    auto_validation: true
  
  template_usage:
    enforce_templates: true
    allow_custom_sections: true
    require_all_sections: false
  
  change_tracking:
    require_change_log: true
    require_version_bump: true
    require_reviewer: true
# SESSION END CHECKLIST
echo "=== SESSION TERMINATION ==="
echo "Date: $(date)"
echo ""

# 1. CODE QUALITY VERIFICATION
echo "üîç CODE QUALITY VERIFICATION"
cd ai-assistant/backend
python -m pytest -v --tb=short || echo "‚ùå Backend tests failing"
cd ../
npm test -- --passWithNoTests --watchAll=false || echo "‚ùå Frontend tests failing"
echo ""

# 2. INTEGRATION SMOKE TEST
echo "üîó INTEGRATION SMOKE TEST" 
cd ai-assistant/backend
python main.py &
BACKEND_PID=$!
sleep 5
curl -s http://localhost:8000/health | grep -q "healthy" && echo "‚úÖ Backend health check" || echo "‚ùå Backend unhealthy"
kill $BACKEND_PID
echo ""

# 3. DOCUMENTATION VERIFICATION
echo "üìö DOCUMENTATION VERIFICATION"
find docs/fixes/ -name "*.md" -newer CLAUDE.md && echo "‚ùå Fix docs newer than CLAUDE.md" || echo "‚úÖ CLAUDE.md current"
grep -q "$(date +%Y-%m)" CLAUDE.md && echo "‚úÖ CLAUDE.md updated this month" || echo "‚ùå CLAUDE.md stale"
echo ""

# 4. COMMIT READINESS CHECK
echo "üì¶ COMMIT READINESS CHECK"
git status --porcelain | wc -l | xargs echo "Modified files:"
git log --oneline -1 | grep -q "$(date +%Y-%m-%d)" && echo "‚úÖ Recent commits today" || echo "‚ÑπÔ∏è No commits today"
echo ""

echo "=== SESSION COMPLETE ==="
echo "Sarah: All failure modes documented and tested"
echo "Alex: All integrations verified and cleanup confirmed"
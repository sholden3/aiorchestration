# SESSION START CHECKLIST
echo "=== SESSION INITIALIZATION ==="
echo "Date: $(date)"
echo "Architects: Alex Novak & Dr. Sarah Chen active"
echo ""

# 1. SYSTEM STATE VALIDATION
echo "üîç SYSTEM STATE VALIDATION"
cd ai-assistant/backend
python -c "import main; print('‚úÖ Backend imports work')" || echo "‚ùå Backend import failure"
cd ../
npm run build --silent && echo "‚úÖ Frontend builds" || echo "‚ùå Frontend build failure"
echo ""

# 2. TEST BASELINE VALIDATION  
echo "üß™ TEST BASELINE VALIDATION"
cd ai-assistant/backend
python -m pytest --co -q | wc -l | xargs echo "Backend tests available:"
cd ../
npm test -- --passWithNoTests --silent && echo "‚úÖ Frontend tests pass" || echo "‚ùå Frontend test failure"
echo ""

# 3. CRITICAL SYSTEMS CHECK
echo "üö® CRITICAL SYSTEMS CHECK"
curl -s http://localhost:8000/health > /dev/null && echo "‚úÖ Backend responding" || echo "‚ùå Backend down"
ps aux | grep -q "python.*main.py" && echo "‚úÖ Backend process running" || echo "‚ùå Backend process missing"
echo ""

# 4. DOCUMENTATION CURRENCY CHECK
echo "üìö DOCUMENTATION CURRENCY CHECK"
ls docs/fixes/ | wc -l | xargs echo "Fix documents available:"
grep -q "$(date +%Y-%m)" CLAUDE.md && echo "‚úÖ CLAUDE.md current" || echo "‚ùå CLAUDE.md outdated"
echo ""

echo "=== SESSION READY ==="
echo "Sarah: Ready for failure mode analysis"
echo "Alex: Ready for integration validation"